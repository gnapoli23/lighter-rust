/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReqGetTrades {
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<String>,
    #[serde(rename = "market_id", skip_serializing_if = "Option::is_none")]
    pub market_id: Option<i32>,
    #[serde(rename = "account_index", skip_serializing_if = "Option::is_none")]
    pub account_index: Option<i64>,
    #[serde(rename = "order_index", skip_serializing_if = "Option::is_none")]
    pub order_index: Option<i64>,
    #[serde(rename = "sort_by")]
    pub sort_by: SortBy,
    #[serde(rename = "sort_dir", skip_serializing_if = "Option::is_none")]
    pub sort_dir: Option<SortDir>,
    #[serde(rename = "cursor", skip_serializing_if = "Option::is_none")]
    pub cursor: Option<String>,
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<i64>,
    #[serde(rename = "ask_filter", skip_serializing_if = "Option::is_none")]
    pub ask_filter: Option<i32>,
    #[serde(rename = "limit")]
    pub limit: i64,
}

impl ReqGetTrades {
    pub fn new(sort_by: SortBy, limit: i64) -> ReqGetTrades {
        ReqGetTrades {
            auth: None,
            market_id: None,
            account_index: None,
            order_index: None,
            sort_by,
            sort_dir: None,
            cursor: None,
            from: None,
            ask_filter: None,
            limit,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SortBy {
    #[serde(rename = "block_height")]
    BlockHeight,
    #[serde(rename = "timestamp")]
    Timestamp,
    #[serde(rename = "trade_id")]
    TradeId,
}

impl Default for SortBy {
    fn default() -> SortBy {
        Self::BlockHeight
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SortDir {
    #[serde(rename = "desc")]
    Desc,
}

impl Default for SortDir {
    fn default() -> SortDir {
        Self::Desc
    }
}

