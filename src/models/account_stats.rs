/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountStats {
    #[serde(rename = "collateral")]
    pub collateral: String,
    #[serde(rename = "portfolio_value")]
    pub portfolio_value: String,
    #[serde(rename = "leverage")]
    pub leverage: String,
    #[serde(rename = "available_balance")]
    pub available_balance: String,
    #[serde(rename = "margin_usage")]
    pub margin_usage: String,
    #[serde(rename = "buying_power")]
    pub buying_power: String,
    #[serde(rename = "cross_stats")]
    pub cross_stats: Box<models::AccountMarginStats>,
    #[serde(rename = "total_stats")]
    pub total_stats: Box<models::AccountMarginStats>,
}

impl AccountStats {
    pub fn new(collateral: String, portfolio_value: String, leverage: String, available_balance: String, margin_usage: String, buying_power: String, cross_stats: models::AccountMarginStats, total_stats: models::AccountMarginStats) -> AccountStats {
        AccountStats {
            collateral,
            portfolio_value,
            leverage,
            available_balance,
            margin_usage,
            buying_power,
            cross_stats: Box::new(cross_stats),
            total_stats: Box::new(total_stats),
        }
    }
}

