/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/elliottech/lighter-go/sharedlib */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 18 "sharedlib.go"

#include <stdlib.h>
#include <stdint.h>
typedef struct {
	char* str;
	char* err;
} StrOrErr;

typedef struct {
	char* privateKey;
	char* publicKey;
	char* err;
} ApiKeyResponse;

typedef struct {
    uint8_t MarketIndex;
    int64_t ClientOrderIndex;
    int64_t BaseAmount;
    uint32_t Price;
    uint8_t IsAsk;
    uint8_t Type;
    uint8_t TimeInForce;
    uint8_t ReduceOnly;
    uint32_t TriggerPrice;
    int64_t OrderExpiry;
} CreateOrderTxReq;

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) ApiKeyResponse GenerateAPIKey(char* cSeed);
extern __declspec(dllexport) char* CreateClient(char* cUrl, char* cPrivateKey, int cChainId, int cApiKeyIndex, long long int cAccountIndex);
extern __declspec(dllexport) char* CheckClient(int cApiKeyIndex, long long int cAccountIndex);
extern __declspec(dllexport) StrOrErr SignChangePubKey(char* cPubKey, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignCreateOrder(int cMarketIndex, long long int cClientOrderIndex, long long int cBaseAmount, int cPrice, int cIsAsk, int cOrderType, int cTimeInForce, int cReduceOnly, int cTriggerPrice, long long int cOrderExpiry, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignCreateGroupedOrders(uint8_t cGroupingType, CreateOrderTxReq* cOrders, int cLen, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignCancelOrder(int cMarketIndex, long long int cOrderIndex, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignWithdraw(long long int cUSDCAmount, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignCreateSubAccount(long long int cNonce);
extern __declspec(dllexport) StrOrErr SignCancelAllOrders(int cTimeInForce, long long int cTime, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignModifyOrder(int cMarketIndex, long long int cIndex, long long int cBaseAmount, long long int cPrice, long long int cTriggerPrice, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignTransfer(long long int cToAccountIndex, long long int cUSDCAmount, long long int cFee, char* cMemo, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignCreatePublicPool(long long int cOperatorFee, long long int cInitialTotalShares, long long int cMinOperatorShareRate, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignUpdatePublicPool(long long int cPublicPoolIndex, int cStatus, long long int cOperatorFee, long long int cMinOperatorShareRate, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignMintShares(long long int cPublicPoolIndex, long long int cShareAmount, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignBurnShares(long long int cPublicPoolIndex, long long int cShareAmount, long long int cNonce);
extern __declspec(dllexport) StrOrErr SignUpdateLeverage(int cMarketIndex, int cInitialMarginFraction, int cMarginMode, long long int cNonce);
extern __declspec(dllexport) StrOrErr CreateAuthToken(long long int cDeadline);
extern __declspec(dllexport) char* SwitchAPIKey(int c);
extern __declspec(dllexport) StrOrErr SignUpdateMargin(int cMarketIndex, long long int cUSDCAmount, int cDirection, long long int cNonce);

#ifdef __cplusplus
}
#endif
